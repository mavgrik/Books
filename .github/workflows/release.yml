name: "Release build"

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    name: Release desktop app

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "-t aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "-t x86_64-apple-darwin"
          - platform: 'macos-latest'
            args: '-t universal-apple-darwin'
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.5.*

      - name: Setup node and cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install macOS targets
        if: runner.os == 'macOS'
        run: rustup target add aarch64-apple-darwin x86_64-apple-darwin

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Dependencies
        run: pnpm install

      - name: Set environment variables (unix)
        if: runner.os != 'Windows'
        run: echo "SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\"" >> ./src-tauri/.env

      - name: Set environment variables (windows)
        if: runner.os == 'Windows'
        run: |
          echo "SENTRY_DSN=`"${{ secrets.SENTRY_DSN }}`"" | Out-File -Append ./src-tauri/.env
          $env:TAURI_FIPS_COMPLIANT="true"

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: books-v__VERSION__
          releaseName: "Books v__VERSION__"
          releaseDraft: true
          tauriScript: "pnpm tauri"
          args: ${{ matrix.args }}