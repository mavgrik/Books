name: "Build test development"

on:
    push:
        branches: [ "dev" ]

env:
  CARGO_TERM_COLOR: always

# This workflow will build your tauri app without uploading it anywhere.
# This is useful to test if the build works on different platforms.
# It will run on ubuntu, macos and windows runners.
# It will build for x86_64 and aarch64 on macos runners.

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '-t aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '-t x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.5.*

      - name: Setup node and cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install macOS targets
        if: runner.os == 'macOS'
        run : rustup target add aarch64-apple-darwin x86_64-apple-darwin

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        run: pnpm tauri build --no-bundle -v ${{ matrix.args }}